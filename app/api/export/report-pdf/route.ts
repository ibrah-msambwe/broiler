import { type NextRequest, NextResponse } from "next/server"

export async function POST(request: NextRequest) {
	try {
		const { report } = await request.json()
		
		if (!report) {
			return NextResponse.json({ error: "Report data is required" }, { status: 400 })
		}

		// Create a more comprehensive PDF content
		const pdfContent = `
# TARIQ BROILER MANAGEMENT SYSTEM
## Professional Report Export

---
**Export Information**
- Export Date: ${new Date().toLocaleString()}
- Generated By: TARIQ System
- Report ID: ${report.id || 'N/A'}

---

## Report Details

**Report Type:** ${report.type || 'N/A'}
**Title:** ${report.title || 'N/A'}
**Batch ID:** ${report.batchId || 'N/A'}
**Report Date:** ${report.date || new Date().toISOString().split("T")[0]}
**Priority Level:** ${report.priority || 'Normal'}
**Status:** ${report.status || 'N/A'}

---

## Report Content

${report.content || "No content provided"}

---

## Additional Fields

${Object.entries(report.fields || {})
	.map(([k, v]: any) => {
		const formattedKey = k.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())
		return `**${formattedKey}:** ${typeof v === "object" ? JSON.stringify(v, null, 2) : String(v)}`
	})
	.join("\n\n")}

---

## System Information

- Generated by TARIQ Broiler Management System
- All data is encrypted and securely stored
- For support, contact your system administrator

---

*This report was automatically generated by the TARIQ system on ${new Date().toLocaleString()}*
`

		// Create a proper text file instead of claiming it's a PDF
		// In a real implementation, you would use a PDF library like puppeteer or jsPDF
		const blob = new Blob([pdfContent], { type: "text/plain" })
		return new NextResponse(blob, {
			headers: {
				"Content-Type": "text/plain",
				"Content-Disposition": `attachment; filename="TARIQ-Report-${report.type || "export"}-${new Date().toISOString().split("T")[0]}.txt"`,
			},
		})
	} catch (error) {
		console.error("Report export failed:", error)
		return NextResponse.json({ error: "Failed to export report" }, { status: 500 })
	}
} 